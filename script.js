// Portfolio Website JavaScript
// Author: Abu Khaled - Eagle

// DOM Elements
const themeToggle = document.querySelector('.theme-toggle');
const langToggle = document.querySelector('.lang-toggle');
const body = document.body;
const html = document.documentElement;

// Language data
const translations = {
    ar: {
        // Navigation
        'ุฃุจู ุฎุงูุฏ - Eagle': 'ุฃุจู ุฎุงูุฏ - Eagle',
        
        // Hero Section
        'ุฎุจุฑุฉ ูฅ ุณููุงุช ูู ูุฌุงู ุงูุญูุงุฉ ุงููุงูุนูุฉ ูุณูุชูู ูู ุงูุจุฑูุฌุฉ': 'ุฎุจุฑุฉ ูฅ ุณููุงุช ูู ูุฌุงู ุงูุญูุงุฉ ุงููุงูุนูุฉ ูุณูุชูู ูู ุงูุจุฑูุฌุฉ',
        'ุชุฑุฃุณ ุงูุนุฏูุฏ ูู ุงูุณูุฑูุฑุงุช ุงูุดููุฑุฉ ูุงููุจูุฑุฉุ ุดุฎุต ูุฎุถุฑู ุจุงููุฌุงู ูุงุณู ูุจูุฑ ูุซููู ุจุงูุณุงุญุฉุ ููุฏู ุงูุนุฏูุฏ ูู ุงููุฒุงูุง ูุซู ุงูุจุฑูุฌุฉ ุงูุงุญุชุฑุงููุฉ ูุงูุชุตููู ุงูุฌุฑุงูููู ูุบูุฑูุง ุงููุซูุฑุ ููุงุตุจู ููุงุฏูุฉ ุนุงููุฉ ุงููุณุชูู.': 'ุชุฑุฃุณ ุงูุนุฏูุฏ ูู ุงูุณูุฑูุฑุงุช ุงูุดููุฑุฉ ูุงููุจูุฑุฉุ ุดุฎุต ูุฎุถุฑู ุจุงููุฌุงู ูุงุณู ูุจูุฑ ูุซููู ุจุงูุณุงุญุฉุ ููุฏู ุงูุนุฏูุฏ ูู ุงููุฒุงูุง ูุซู ุงูุจุฑูุฌุฉ ุงูุงุญุชุฑุงููุฉ ูุงูุชุตููู ุงูุฌุฑุงูููู ูุบูุฑูุง ุงููุซูุฑุ ููุงุตุจู ููุงุฏูุฉ ุนุงููุฉ ุงููุณุชูู.',
        'ุชูุงุตู ูุนู': 'ุชูุงุตู ูุนู',
        
        // About Section
        'ุนููู': 'ุนููู',
        'ูุฑุญุจุงูุ ุฃูุง ุฃุจู ุฎุงูุฏ - Eagleุ ูุญุชุฑู ูู ุนุงูู ุงูุชูููููุฌูุง ูุงูุจุฑูุฌุฉ. ุจุฏุฃุช ุฑุญูุชู ููุฐ ุฎูุณ ุณููุงุช ูู ุงูุญูุงุฉ ุงูุนูููุฉุ ูุงูุชุณุจุช ุฎุจุฑุฉ ุนูููุฉ ูู ุฅุฏุงุฑุฉ ุงูุณูุฑูุฑุงุช ูุงููุดุงุฑูุน ุงูุชูููุฉ ุงููุจูุฑุฉ.': 'ูุฑุญุจุงูุ ุฃูุง ุฃุจู ุฎุงูุฏ - Eagleุ ูุญุชุฑู ูู ุนุงูู ุงูุชูููููุฌูุง ูุงูุจุฑูุฌุฉ. ุจุฏุฃุช ุฑุญูุชู ููุฐ ุฎูุณ ุณููุงุช ูู ุงูุญูุงุฉ ุงูุนูููุฉุ ูุงูุชุณุจุช ุฎุจุฑุฉ ุนูููุฉ ูู ุฅุฏุงุฑุฉ ุงูุณูุฑูุฑุงุช ูุงููุดุงุฑูุน ุงูุชูููุฉ ุงููุจูุฑุฉ.',
        'ุนูู ูุฏุงุฑ ุงูุณูุชูู ุงููุงุถูุชููุ ุฑูุฒุช ุนูู ุชุทููุฑ ููุงุฑุงุชู ุงูุจุฑูุฌูุฉุ ูุฃุตุจุญุช ูุงุฆุฏุงู ูู ูุฐุง ุงููุฌุงูุ ุญูุซ ุฃุฏูุฑ ุงูุนุฏูุฏ ูู ุงูุณูุฑูุฑุงุช ุงููุดููุฑุฉ ูุฃูุฏู ุฎุฏูุงุช ูุชููุนุฉ ุชุดูู ุงูุจุฑูุฌุฉ ูุงูุชุตููู ุงูุฌุฑุงูููู.': 'ุนูู ูุฏุงุฑ ุงูุณูุชูู ุงููุงุถูุชููุ ุฑูุฒุช ุนูู ุชุทููุฑ ููุงุฑุงุชู ุงูุจุฑูุฌูุฉุ ูุฃุตุจุญุช ูุงุฆุฏุงู ูู ูุฐุง ุงููุฌุงูุ ุญูุซ ุฃุฏูุฑ ุงูุนุฏูุฏ ูู ุงูุณูุฑูุฑุงุช ุงููุดููุฑุฉ ูุฃูุฏู ุฎุฏูุงุช ูุชููุนุฉ ุชุดูู ุงูุจุฑูุฌุฉ ูุงูุชุตููู ุงูุฌุฑุงูููู.',
        'ุณููุงุช ุฎุจุฑุฉ': 'ุณููุงุช ุฎุจุฑุฉ',
        'ูุดุฑูุน ููุชูู': 'ูุดุฑูุน ููุชูู',
        'ุณูุฑูุฑุงุช ูุฏุงุฑุฉ': 'ุณูุฑูุฑุงุช ูุฏุงุฑุฉ',
        
        // Skills Section
        'ุงูููุงุฑุงุช': 'ุงูููุงุฑุงุช',
        'ุชุตููู ุงูููุงูุน': 'ุชุตููู ุงูููุงูุน',
        'ุฅูุดุงุก ููุงูุน ููุจ ุงุญุชุฑุงููุฉ ูุชูุงุนููุฉ ุจุงุณุชุฎุฏุงู ุฃุญุฏุซ ุงูุชูููุงุช': 'ุฅูุดุงุก ููุงูุน ููุจ ุงุญุชุฑุงููุฉ ูุชูุงุนููุฉ ุจุงุณุชุฎุฏุงู ุฃุญุฏุซ ุงูุชูููุงุช',
        'ุฅุฏุงุฑุฉ ุงูุฃุนูุงู': 'ุฅุฏุงุฑุฉ ุงูุฃุนูุงู',
        'ุฎุจุฑุฉ ูุงุณุนุฉ ูู ุฅุฏุงุฑุฉ ุงููุดุงุฑูุน ุงููุจูุฑุฉ ูุงูุณูุฑูุฑุงุช ุงููุนูุฏุฉ': 'ุฎุจุฑุฉ ูุงุณุนุฉ ูู ุฅุฏุงุฑุฉ ุงููุดุงุฑูุน ุงููุจูุฑุฉ ูุงูุณูุฑูุฑุงุช ุงููุนูุฏุฉ',
        'ุงูุจุฑูุฌุฉ': 'ุงูุจุฑูุฌุฉ',
        'ุชุทููุฑ ุงูุชุทุจููุงุช ูุงูุฃูุธูุฉ ุจุงุณุชุฎุฏุงู ูุบุงุช ุจุฑูุฌุฉ ูุชุนุฏุฏุฉ': 'ุชุทููุฑ ุงูุชุทุจููุงุช ูุงูุฃูุธูุฉ ุจุงุณุชุฎุฏุงู ูุบุงุช ุจุฑูุฌุฉ ูุชุนุฏุฏุฉ',
        'ุงูุชุตููู ุงูุฌุฑุงูููู': 'ุงูุชุตููู ุงูุฌุฑุงูููู',
        'ุฅุจุฏุงุน ุชุตุงููู ุจุตุฑูุฉ ูููุฒุฉ ูููููุฉ ุงูุชุฌุงุฑูุฉ ูุงููุญุชูู ุงูุฑููู': 'ุฅุจุฏุงุน ุชุตุงููู ุจุตุฑูุฉ ูููุฒุฉ ูููููุฉ ุงูุชุฌุงุฑูุฉ ูุงููุญุชูู ุงูุฑููู',
        
        // Footer
        'ุฌููุน ุงูุญููู ูุญููุธุฉ ยฉ 2025 ุฃุจู ุฎุงูุฏ - Eagle': 'ุฌููุน ุงูุญููู ูุญููุธุฉ ยฉ 2025 ุฃุจู ุฎุงูุฏ - Eagle'
    },
    en: {
        // Navigation
        'ุฃุจู ุฎุงูุฏ - Eagle': 'Abu Khaled - Eagle',
        
        // Hero Section
        'ุฎุจุฑุฉ ูฅ ุณููุงุช ูู ูุฌุงู ุงูุญูุงุฉ ุงููุงูุนูุฉ ูุณูุชูู ูู ุงูุจุฑูุฌุฉ': '5 years of real-life experience and 2 years in programming',
        'ุชุฑุฃุณ ุงูุนุฏูุฏ ูู ุงูุณูุฑูุฑุงุช ุงูุดููุฑุฉ ูุงููุจูุฑุฉุ ุดุฎุต ูุฎุถุฑู ุจุงููุฌุงู ูุงุณู ูุจูุฑ ูุซููู ุจุงูุณุงุญุฉุ ููุฏู ุงูุนุฏูุฏ ูู ุงููุฒุงูุง ูุซู ุงูุจุฑูุฌุฉ ุงูุงุญุชุฑุงููุฉ ูุงูุชุตููู ุงูุฌุฑุงูููู ูุบูุฑูุง ุงููุซูุฑุ ููุงุตุจู ููุงุฏูุฉ ุนุงููุฉ ุงููุณุชูู.': 'Leading numerous famous and large servers, a veteran in the field and a big name in the arena. Offers many advantages such as professional programming and graphic design among many others, holding high-level leadership positions.',
        'ุชูุงุตู ูุนู': 'Contact Me',
        
        // About Section
        'ุนููู': 'About Me',
        'ูุฑุญุจุงูุ ุฃูุง ุฃุจู ุฎุงูุฏ - Eagleุ ูุญุชุฑู ูู ุนุงูู ุงูุชูููููุฌูุง ูุงูุจุฑูุฌุฉ. ุจุฏุฃุช ุฑุญูุชู ููุฐ ุฎูุณ ุณููุงุช ูู ุงูุญูุงุฉ ุงูุนูููุฉุ ูุงูุชุณุจุช ุฎุจุฑุฉ ุนูููุฉ ูู ุฅุฏุงุฑุฉ ุงูุณูุฑูุฑุงุช ูุงููุดุงุฑูุน ุงูุชูููุฉ ุงููุจูุฑุฉ.': 'Hello, I\'m Abu Khaled - Eagle, a professional in the world of technology and programming. I started my journey five years ago in professional life, gaining deep experience in server management and large technical projects.',
        'ุนูู ูุฏุงุฑ ุงูุณูุชูู ุงููุงุถูุชููุ ุฑูุฒุช ุนูู ุชุทููุฑ ููุงุฑุงุชู ุงูุจุฑูุฌูุฉุ ูุฃุตุจุญุช ูุงุฆุฏุงู ูู ูุฐุง ุงููุฌุงูุ ุญูุซ ุฃุฏูุฑ ุงูุนุฏูุฏ ูู ุงูุณูุฑูุฑุงุช ุงููุดููุฑุฉ ูุฃูุฏู ุฎุฏูุงุช ูุชููุนุฉ ุชุดูู ุงูุจุฑูุฌุฉ ูุงูุชุตููู ุงูุฌุฑุงูููู.': 'Over the past two years, I focused on developing my programming skills, becoming a leader in this field, managing numerous famous servers and providing diverse services including programming and graphic design.',
        'ุณููุงุช ุฎุจุฑุฉ': 'Years Experience',
        'ูุดุฑูุน ููุชูู': 'Projects Completed',
        'ุณูุฑูุฑุงุช ูุฏุงุฑุฉ': 'Servers Managed',
        
        // Skills Section
        'ุงูููุงุฑุงุช': 'Skills',
        'ุชุตููู ุงูููุงูุน': 'Web Design',
        'ุฅูุดุงุก ููุงูุน ููุจ ุงุญุชุฑุงููุฉ ูุชูุงุนููุฉ ุจุงุณุชุฎุฏุงู ุฃุญุฏุซ ุงูุชูููุงุช': 'Creating professional and interactive websites using the latest technologies',
        'ุฅุฏุงุฑุฉ ุงูุฃุนูุงู': 'Business Management',
        'ุฎุจุฑุฉ ูุงุณุนุฉ ูู ุฅุฏุงุฑุฉ ุงููุดุงุฑูุน ุงููุจูุฑุฉ ูุงูุณูุฑูุฑุงุช ุงููุนูุฏุฉ': 'Extensive experience in managing large projects and complex servers',
        'ุงูุจุฑูุฌุฉ': 'Programming',
        'ุชุทููุฑ ุงูุชุทุจููุงุช ูุงูุฃูุธูุฉ ุจุงุณุชุฎุฏุงู ูุบุงุช ุจุฑูุฌุฉ ูุชุนุฏุฏุฉ': 'Developing applications and systems using multiple programming languages',
        'ุงูุชุตููู ุงูุฌุฑุงูููู': 'Graphic Design',
        'ุฅุจุฏุงุน ุชุตุงููู ุจุตุฑูุฉ ูููุฒุฉ ูููููุฉ ุงูุชุฌุงุฑูุฉ ูุงููุญุชูู ุงูุฑููู': 'Creating distinctive visual designs for branding and digital content',
        
        // Footer
        'ุฌููุน ุงูุญููู ูุญููุธุฉ ยฉ 2025 ุฃุจู ุฎุงูุฏ - Eagle': 'All rights reserved ยฉ 2025 Abu Khaled - Eagle'
    }
};

// State management
let currentLang = 'ar';
let currentTheme = localStorage.getItem('theme') || 'light';

// Initialize the website
document.addEventListener('DOMContentLoaded', function() {
    initializeTheme();
    initializeLanguage();
    initializeAnimations();
    initializeEventListeners();
    initializeScrollAnimations();
    animateProgressBars();
    typewriterEffect();
});

// Theme Management
function initializeTheme() {
    if (currentTheme === 'dark') {
        body.setAttribute('data-theme', 'dark');
        themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
    } else {
        body.removeAttribute('data-theme');
        themeToggle.innerHTML = '<i class="fas fa-moon"></i>';
    }
}

function toggleTheme() {
    if (currentTheme === 'light') {
        currentTheme = 'dark';
        body.setAttribute('data-theme', 'dark');
        themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
    } else {
        currentTheme = 'light';
        body.removeAttribute('data-theme');
        themeToggle.innerHTML = '<i class="fas fa-moon"></i>';
    }
    
    localStorage.setItem('theme', currentTheme);
    
    // Add theme transition effect
    body.style.transition = 'all 0.3s ease';
    setTimeout(() => {
        body.style.transition = '';
    }, 300);
}

// Language Management
function initializeLanguage() {
    const savedLang = localStorage.getItem('language') || 'ar';
    if (savedLang !== currentLang) {
        toggleLanguage();
    }
}

function toggleLanguage() {
    if (currentLang === 'ar') {
        currentLang = 'en';
        html.setAttribute('lang', 'en');
        html.setAttribute('dir', 'ltr');
        langToggle.innerHTML = '<span class="flag">๐ฌ๐ง</span>';
    } else {
        currentLang = 'ar';
        html.setAttribute('lang', 'ar');
        html.setAttribute('dir', 'rtl');
        langToggle.innerHTML = '<span class="flag">๐ธ๐ฆ</span>';
    }
    
    updateTexts();
    localStorage.setItem('language', currentLang);
    
    // Add language transition effect
    document.body.style.opacity = '0.8';
    setTimeout(() => {
        document.body.style.opacity = '1';
    }, 200);
}

function updateTexts() {
    const elements = document.querySelectorAll('[data-ar][data-en]');
    elements.forEach(element => {
        const arText = element.getAttribute('data-ar');
        const enText = element.getAttribute('data-en');
        
        if (currentLang === 'ar') {
            element.textContent = arText;
        } else {
            element.textContent = enText;
        }
    });
}

// Animation Management
function initializeAnimations() {
    // Add CSS classes for scroll animations
    const elementsToAnimate = document.querySelectorAll('.about-content, .skill-card, .stat-item');
    elementsToAnimate.forEach((element, index) => {
        element.classList.add('fade-in');
        element.style.animationDelay = `${index * 0.1}s`;
    });
}

function initializeScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
            }
        });
    }, observerOptions);
    
    const animatedElements = document.querySelectorAll('.fade-in, .slide-in-left, .slide-in-right');
    animatedElements.forEach(element => {
        observer.observe(element);
    });
}

// Progress Bar Animation
function animateProgressBars() {
    const progressBars = document.querySelectorAll('.progress-bar');
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const progressBar = entry.target;
                const progress = progressBar.style.getPropertyValue('--progress');
                progressBar.style.width = '0%';
                setTimeout(() => {
                    progressBar.style.width = progress;
                }, 200);
            }
        });
    }, { threshold: 0.5 });
    
    progressBars.forEach(bar => {
        observer.observe(bar);
    });
}

// Typewriter Effect
function typewriterEffect() {
    const heroTitle = document.querySelector('.hero-title');
    if (!heroTitle) return;
    
    const text = heroTitle.textContent;
    heroTitle.textContent = '';
    heroTitle.style.borderRight = '3px solid var(--primary-color)';
    
    let index = 0;
    const typeSpeed = 100;
    
    function type() {
        if (index < text.length) {
            heroTitle.textContent += text.charAt(index);
            index++;
            setTimeout(type, typeSpeed);
        } else {
            // Remove cursor after typing is complete
            setTimeout(() => {
                heroTitle.style.borderRight = 'none';
            }, 1000);
        }
    }
    
    // Start typing after a delay
    setTimeout(type, 1000);
}

// Event Listeners
function initializeEventListeners() {
    // Theme toggle
    themeToggle.addEventListener('click', toggleTheme);
    
    // Language toggle
    langToggle.addEventListener('click', toggleLanguage);
    
    // Smooth scrolling for CTA button
    const ctaBtn = document.querySelector('.cta-btn');
    if (ctaBtn) {
        ctaBtn.addEventListener('click', () => {
            document.querySelector('.about').scrollIntoView({
                behavior: 'smooth'
            });
        });
    }
    
    // Header scroll effect
    window.addEventListener('scroll', handleHeaderScroll);
    
    // Keyboard navigation
    document.addEventListener('keydown', handleKeyboardNavigation);
    
    // Mouse parallax effect
    document.addEventListener('mousemove', handleMouseParallax);
    
    // Skill card hover effects
    initializeSkillCardEffects();
    
    // Stats counter animation
    initializeStatsCounter();
}

// Header scroll effect
function handleHeaderScroll() {
    const header = document.querySelector('.header');
    if (window.scrollY > 100) {
        header.style.background = currentTheme === 'dark' 
            ? 'rgba(15, 23, 42, 0.98)' 
            : 'rgba(255, 255, 255, 0.98)';
        header.style.backdropFilter = 'blur(20px)';
    } else {
        header.style.background = currentTheme === 'dark' 
            ? 'rgba(15, 23, 42, 0.95)' 
            : 'rgba(255, 255, 255, 0.95)';
        header.style.backdropFilter = 'blur(10px)';
    }
}

// Keyboard navigation
function handleKeyboardNavigation(e) {
    if (e.key === 't' && (e.ctrlKey || e.metaKey)) {
        e.preventDefault();
        toggleTheme();
    }
    
    if (e.key === 'l' && (e.ctrlKey || e.metaKey)) {
        e.preventDefault();
        toggleLanguage();
    }
}

// Mouse parallax effect
function handleMouseParallax(e) {
    const profileCard = document.querySelector('.profile-card');
    if (!profileCard) return;
    
    const rect = profileCard.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    
    const centerX = rect.width / 2;
    const centerY = rect.height / 2;
    
    const rotateX = (y - centerY) / 10;
    const rotateY = (centerX - x) / 10;
    
    profileCard.style.transform = `
        perspective(1000px) 
        rotateX(${rotateX}deg) 
        rotateY(${rotateY}deg)
        translateZ(0)
    `;
}

// Skill card effects
function initializeSkillCardEffects() {
    const skillCards = document.querySelectorAll('.skill-card');
    
    skillCards.forEach(card => {
        card.addEventListener('mouseenter', () => {
            card.style.transform = 'translateY(-15px) scale(1.02)';
            card.style.transition = 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)';
        });
        
        card.addEventListener('mouseleave', () => {
            card.style.transform = 'translateY(0) scale(1)';
        });
        
        // Add click ripple effect
        card.addEventListener('click', (e) => {
            const ripple = document.createElement('div');
            const rect = card.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            
            ripple.style.cssText = `
                position: absolute;
                border-radius: 50%;
                background: rgba(37, 99, 235, 0.3);
                width: 20px;
                height: 20px;
                left: ${x - 10}px;
                top: ${y - 10}px;
                animation: ripple 0.6s ease-out;
                pointer-events: none;
            `;
            
            card.appendChild(ripple);
            setTimeout(() => ripple.remove(), 600);
        });
    });
    
    // Add ripple animation
    if (!document.querySelector('#ripple-style')) {
        const style = document.createElement('style');
        style.id = 'ripple-style';
        style.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(20);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
}

// Stats counter animation
function initializeStatsCounter() {
    const statNumbers = document.querySelectorAll('.stat-number');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const target = entry.target;
                const finalValue = parseInt(target.textContent);
                let currentValue = 0;
                const increment = finalValue / 60; // 60 frames for smooth animation
                
                const counter = setInterval(() => {
                    currentValue += increment;
                    if (currentValue >= finalValue) {
                        target.textContent = finalValue + (target.textContent.includes('+') ? '+' : '');
                        clearInterval(counter);
                    } else {
                        target.textContent = Math.floor(currentValue) + (target.textContent.includes('+') ? '+' : '');
                    }
                }, 16); // ~60fps
                
                observer.unobserve(target);
            }
        });
    }, { threshold: 0.5 });
    
    statNumbers.forEach(stat => {
        observer.observe(stat);
    });
}

// Utility Functions
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

function throttle(func, limit) {
    let inThrottle;
    return function() {
        const args = arguments;
        const context = this;
        if (!inThrottle) {
            func.apply(context, args);
            inThrottle = true;
            setTimeout(() => inThrottle = false, limit);
        }
    }
}

// Performance optimizations
const debouncedResize = debounce(() => {
    // Handle resize events
    console.log('Window resized');
}, 250);

const throttledScroll = throttle(() => {
    // Handle scroll events
    handleHeaderScroll();
}, 16);

window.addEventListener('resize', debouncedResize);
window.addEventListener('scroll', throttledScroll);

// Add loading animation
window.addEventListener('load', () => {
    document.body.classList.add('loaded');
    
    // Remove loading screen if exists
    const loader = document.querySelector('.loader');
    if (loader) {
        loader.style.opacity = '0';
        setTimeout(() => loader.remove(), 300);
    }
});

// Error handling
window.addEventListener('error', (e) => {
    console.error('JavaScript Error:', e.error);
});

// Console message
console.log('%c๐ฆ Abu Khaled - Eagle Portfolio', 'color: #2563eb; font-size: 20px; font-weight: bold;');
console.log('%cDesigned & Developed with โค๏ธ', 'color: #f59e0b; font-size: 14px;');
